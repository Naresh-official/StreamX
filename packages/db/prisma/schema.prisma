generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  email          String     @unique
  name           String?
  profilePicture String?
  createdAt      DateTime   @default(now())
  status         UserStatus @default(ACTIVE)
}

model Admin {
  id             String   @id @default(uuid())
  email          String   @unique
  name           String?
  profilePicture String?
  createdAt      DateTime @default(now())
}

model Video {
  id           String      @id @default(uuid())
  title        String
  description  String
  thumbnailUrl String      @default("")
  duration     Int
  tags         Tag[]       @relation("VideoTags")
  createdAt    DateTime    @default(now())
  categories   Category[]  @relation("VideoCategories")
  status       VideoStatus @default(UPLOADING)
  viewEvent    ViewEvent[]
}

model Tag {
  id     String  @id @default(uuid())
  name   String  @unique
  videos Video[] @relation("VideoTags")
}

model Category {
  id     String  @id @default(uuid())
  name   String  @unique
  videos Video[] @relation("VideoCategories")
}

model ViewEvent {
  id        String   @id @default(uuid())
  userId    String
  videoId   String
  timestamp DateTime @default(now())
  Video     Video    @relation(fields: [videoId], references: [id])
}

model Subscription {
  id        String           @id @default(uuid())
  userId    String
  plan      SubscriptionPlan
  startsAt  DateTime
  expiresAt DateTime
  isActive  Boolean
}

model Payment {
  id          String        @id @default(uuid())
  userId      String
  amount      Float
  currency    String
  status      PaymentStatus
  paymentDate DateTime      @default(now())
}

enum SubscriptionPlan {
  FREE
  PREMIUM
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}

enum VideoStatus {
  UPLOADING
  PROCESSING
  COMPLETED
  FAILED
}

enum UserStatus {
  ACTIVE
  BANNED
}
